basePath: /
definitions:
  models.CreateComment:
    properties:
      body:
        minLength: 3
        type: string
      post_id:
        type: string
    required:
    - body
    - post_id
    type: object
  models.CreatePost:
    properties:
      body:
        minLength: 10
        type: string
      published:
        type: boolean
      title:
        minLength: 2
        type: string
    required:
    - body
    - title
    type: object
  models.Login:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  models.ResponseList:
    properties:
      data: {}
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      success:
        type: boolean
    type: object
  models.ResponseStatus:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  models.SavedPostAction:
    properties:
      post_id:
        type: string
      user_id:
        type: string
    required:
    - post_id
    - user_id
    type: object
  models.Token:
    properties:
      token:
        type: string
    type: object
  models.UpdateComment:
    properties:
      body:
        minLength: 3
        type: string
    type: object
  models.UpdatePost:
    properties:
      body:
        minLength: 10
        type: string
      published:
        type: boolean
      title:
        minLength: 2
        type: string
    type: object
  models.UpdateUser:
    properties:
      first_name:
        minLength: 2
        type: string
      last_name:
        minLength: 2
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    type: object
  models.UserCreate:
    properties:
      email:
        type: string
      first_name:
        minLength: 2
        type: string
      last_name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    required:
    - email
    - first_name
    - password
    type: object
host: localhost:8000
info:
  contact:
    email: asliddinberdiyevv@gmail.com
    name: Asliddin
    url: https://agsu.uz
  description: API Server for MEDIUM_MINI Application
  title: MEDIUM MINI_API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login a user
      parameters:
      - description: Login Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: Login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout a user
      parameters:
      - description: Logout Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.Token'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a user
      parameters:
      - description: Register Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: Register
      tags:
      - auth
  /comments:
    get:
      consumes:
      - application/json
      description: get all comments
      parameters:
      - description: Post ID
        in: query
        name: post_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: GetAll
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: create a comment
      parameters:
      - description: Create Comment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CreateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - comment
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: delete comment
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: update comment
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Update Comment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UpdateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - comment
  /posts:
    get:
      consumes:
      - application/json
      description: get all saved post
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: GetAll
      tags:
      - saved_post
    post:
      consumes:
      - application/json
      description: create a post
      parameters:
      - description: Create Post Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CreatePost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - post
    get:
      consumes:
      - application/json
      description: get by id post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: GetByID
      tags:
      - post
    put:
      consumes:
      - application/json
      description: update post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Update Post Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - post
  /savedposts:
    post:
      consumes:
      - application/json
      description: save post
      parameters:
      - description: Save Post Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.SavedPostAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: SavedPost
      tags:
      - saved_post
  /savedposts/:post_id:
    delete:
      consumes:
      - application/json
      description: save post remove
      parameters:
      - description: post_id
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: SavedPost
      tags:
      - saved_post
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: GetAll
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get by id user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: GetByID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateUser Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - user
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
